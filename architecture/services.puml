@startuml

package lib {
	class KeyboardInputConfig
	class Win32InputService
	class KeyboardInputService
	class InputMethodsService
	class InputServerController

	KeyboardInputService *-- Win32InputService
	KeyboardInputService *-- KeyboardInputConfig

	InputMethodsService *-- KeyboardInputService
	InputServerController *-- KeyboardInputConfig

	KeyboardInputConfig *-- Win32InputService

	InputServerController *-- Win32InputService
	InputServerController *-- InputMethodsService
}

package lib.factory {
	class KeyboardElementFactory
}

package app {
	class KeyboardRenderer
	class KeyboardWidget
	class KeyboardController
	abstract class KeyboardElement

	KeyboardRenderer <-- KeyboardWidget
	KeyboardWidget *-- KeyboardElementFactory

	KeyboardController --* KeyboardElement
	KeyboardElement <-- KeyboardWidget
	KeyboardElement <- KeyboardRenderer
}


@enduml

@startuml

class KeyboardElementFactory {
	- _baseKeyActionFactory
	- _baseHotkeyActionFactory
	- _baseMouseButtonActionFactory
	- _baseMouseMoveActionFactory
	- _baseToggleActionFactory

	+ buildKeyAction(keyCode)
	+ buildHotkeyAction(hotkey)
	+ buildMouseButtonAction(button)
	+ buildMouseMoveAction()
	+ buildToggleAction(switchId)
}

abstract class BaseKeyActionFactory {
	+ build(keyCode)
}

class KeyActionFactory extends BaseKeyActionFactory {
	+ build(keyCode)
}

KeyboardElementFactory *-- BaseKeyActionFactory

@enduml
